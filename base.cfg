[buildout]
show-picked-versions = true
extensions =
    mr.developer

parts =
    instance
    test
# we use tox for testing and linting, by default
    code-analysis
    i18ndude
    omelette
    plone-helper-scripts
    vscode
    zpretty
    zpretty-run

develop = .
sources-dir = extras
auto-checkout = *
#always-checkout = force

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
environment-vars =
    zope_i18n_compile_mo_files true
eggs =
    Plone
    Pillow
    rer.sitesearch [test]

zcml-additional =
  <configure xmlns="http://namespaces.zope.org/zope"
             xmlns:plone="http://namespaces.plone.org/plone">
  <plone:CORSPolicy
    allow_origin="http://localhost:3000,http://127.0.0.1:3000"
    allow_methods="DELETE,GET,OPTIONS,PATCH,POST,PUT"
    allow_credentials="true"
    expose_headers="Content-Length,X-My-Header"
    allow_headers="Accept,Authorization,Content-Type,X-Custom-Header,Origin,Lock-Token"
    max_age="3600"
    />
  </configure>


[vscode]
recipe = collective.recipe.vscode
eggs = ${instance:eggs}
autocomplete-use-omelette = True

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/rer
return-status-codes = False


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs =
    ${instance:eggs}
    plone.app.contentlisting
    plone.app.querystring

initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'rer.sitesearch', '--auto-color', '--auto-progress']

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[plone-helper-scripts]
recipe = zc.recipe.egg
eggs =
   Products.CMFPlone
   ${instance:eggs}
interpreter = zopepy
scripts =
   zopepy
   plone-compile-resources

[zpretty]
recipe = zc.recipe.egg
eggs =
   zpretty

[zpretty-run]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    find src -name '*.zcml' | xargs bin/zpretty -i
output = ${buildout:directory}/bin/zpretty-run
mode = 755

[versions]
# Don't use a released version of rer.sitesearch
rer.sitesearch =
setuptools =

[sources]
